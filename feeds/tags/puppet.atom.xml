<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>miscellaneous</title><link href="http://blog.jameskyle.org/" rel="alternate"></link><link href="http://blog.jameskyle.org/feeds/tags/puppet.atom.xml" rel="self"></link><id>http://blog.jameskyle.org/</id><updated>2012-07-15T15:20:00-07:00</updated><entry><title>A Boilerplate Comparison: Puppet</title><link href="http://blog.jameskyle.org/2012/07/puppet-boilerplate" rel="alternate"></link><updated>2012-07-15T15:20:00-07:00</updated><author><name>James A. Kyle</name></author><id>tag:blog.jameskyle.org,2012-07-15:2012/07/puppet-boilerplate</id><summary type="html">&lt;div class="section" id="introduction"&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Here we cover the steps for deploying a package to a puppet agent/node.
Like with chef, we assume a working installation.&lt;/p&gt;
&lt;p&gt;Though I must take the opportunity to comment that the installation
process for puppet was ridiculously easy.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-ridiculously-easy-way"&gt;
&lt;h2&gt;The ridiculously easy way&lt;/h2&gt;
&lt;p&gt;Package installation can be performed completely through the console,
e.g. web ui, for puppet. To do so, you go to &lt;a class="reference external" href="https://puppetmaster.me.com"&gt;https://puppetmaster.me.com&lt;/a&gt;
and click 'Live Management' -&amp;gt; Advanced Tasks -&amp;gt; package tasks -&amp;gt;
Install. Type in the package name you wish to install and click 'Run'.&lt;/p&gt;
&lt;p&gt;That's it. Done.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-not-quite-ridiculously-easy-way"&gt;
&lt;h2&gt;The not quite ridiculously easy way&lt;/h2&gt;
&lt;p&gt;That seems almost too trivial. It's nice that the trivial tasks are
trivial to perform, but let's take a closer look at what it takes to
roll your own task and deploy it. It's more representative of how a
sysadmin will interact with the framework and seems more fair to chef.&lt;/p&gt;
&lt;div class="section" id="creating-a-module-from-scratch"&gt;
&lt;h3&gt;Creating a module from scratch&lt;/h3&gt;
&lt;p&gt;Puppet, like chef, can generate a module template. Puppet is very
community centric and sharing of modules is the default. As such, the
module template asks you to prepend your Puppet Forge username as it is
the best practice naming convention for shared modules. Like in our
previous walk through with chef, we're going to write a package for
installing tmux.&lt;/p&gt;
&lt;div class="section" id="create-the-package"&gt;
&lt;h4&gt;Create the package&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;% puppet module generate username-tmux
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You're rewarded with a directory like&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Modulefile README     manifests  spec       tests
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="edit-modulefile"&gt;
&lt;h4&gt;Edit Modulefile&lt;/h4&gt;
&lt;p&gt;You should always edit the modulefile and enter pertinent information
such as version, license, description, etc.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="create-tmux-class"&gt;
&lt;h4&gt;Create tmux class&lt;/h4&gt;
&lt;p&gt;The business is in the init.pp file, we edit that and add our package
requirement.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="n"&gt;tmux&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;package&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;tmux&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="add-class-to-a-node"&gt;
&lt;h4&gt;Add class to a node&lt;/h4&gt;
&lt;p&gt;Finally, to apply the role to a node you add it to the nodes definition
in the site.pp file. This isn't a hard, fast rule. Puppet can pull node
configuration from external sources. Puppet Enterprise console provides
this and so you could use the web frontend to add the class to your list
in console and then apply it to a group. You could also provide your own
backend.&lt;/p&gt;
&lt;p&gt;However, the &amp;quot;basic&amp;quot; basic, out the box puppet involves editing the
site.pp, so we&amp;amp;squot;ll add it to the default node here&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;node&lt;/span&gt; &lt;span class="n"&gt;default&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;tmux&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We also commit the package to our repository.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;% git add modules/username-tmux manifests/site.pp
% git commit modules/username-tmux manifests/site.pp -m &lt;span class="s2"&gt;&amp;quot;added tmux module&amp;quot;&lt;/span&gt;
% git push origin master
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="comments"&gt;
&lt;h3&gt;Comments&lt;/h3&gt;
&lt;p&gt;If you noticed, we didn't cover how you upload your module and manifest
like we did in the &lt;a class="reference external" href="/2012/07/infrastructure-automation-a-boilerplate-comparison/"&gt;Chef&lt;/a&gt; article. That's because puppet doesn't have a
management tool for interacting with the puppet master like the knife
tool. Deployment is left up to the administrator. Some common methods
are using cap deploy, commit hooks, or pulling files down in a cron from
the repo.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="/2012/07/infrastructure-automation-a-boilerplate-comparison/"&gt;Previous Article&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</summary><category term="administration"></category><category term="chef"></category><category term="devops"></category><category term="infrastructure"></category><category term="linux"></category><category term="puppet"></category></entry></feed>